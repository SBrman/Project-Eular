#! python3

"""

Even Fibonacci numbers 
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four
million, find the sum of the even-valued terms.


"""
import timeit

# Normal
def fibonachi(belowNum):
    n1 = 0
    n2 = 1

    for number in range(belowNum):
        n1, n2 = n2, n1+n2
    return n2

n = 1
SUM = 0
while True:
    term = fibonachi(n)
    if term > 4000000:
        break
    if term % 2 == 0:
       SUM += term
    n += 1
print(SUM)

print('50000 run of this code took ', timeit.timeit('''def fibonachi(belowNum):
    n1 = 0
    n2 = 1

    for number in range(belowNum):
        n1, n2 = n2, n1+n2
    return n2

n = 1
SUM = 0
while True:
    term = fibonachi(n)
    if term > 4000000:
        break
    if term % 2 == 0:
       SUM += term
    n += 1''',number=50000), ' Sec')


# Generator
def fibonachi(belowNum):
    n1 = 0
    n2 = 1

    for number in range(belowNum):
        n1, n2 = n2, n1+n2
        yield n2

SUM = 0
for number in fibonachi(1000000000):
    if number > 4000000:
        break
    if number % 2 ==0:
       SUM += number
print(SUM)

print('50000 run of this code took (using generatot) ', timeit.timeit('''# Generator
def fibonachi(belowNum):
    n1 = 0
    n2 = 1

    for number in range(belowNum):
        n1, n2 = n2, n1+n2
        yield n2

SUM = 0
for number in fibonachi(1000000000):
    if number > 4000000:
        break
    if number % 2 ==0:
       SUM += number''', number=50000), ' Sec')
